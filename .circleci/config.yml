version: 2.1

workflows:
  WebServerDeployment:
      jobs:
        - packer validate
        - terraform validate
        - packer build:
            requires:
              - packer validate
        - terraform plan and apply:
            requires:
              - terraform validate
              - packer build
            filters:
              branches:
                only: main
        - test web server output:
          requires:
            - terraform apply
          filters:
              branches:
                only: main

jobs:
  packer validate:
    docker:
      - image: hashicorp/packer
    steps:
      - checkout
      - run:
          name: install ansible
          command: apk add ansible
      - run:
          name: packer validate
          command: |
            cd build-image
            packer validate image_build.json

  terraform validate:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: terraform validate
          command: |
            terraform init
            terraform validate

  packer build:
    docker:
      - image: hashicorp/packer
    steps:
      - checkout
      - run:
          name: install ansible
          command: apk add ansible
      - run:
          name: packer build
          command: |
            cd build-image
            packer build image_build.json

  terraform plan, apply and test:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: terraform plan and apply
          command: |
            terraform init
            terraform plan
            terraform apply -auto-approve
            url=$(terraform output -raw elb_dns_name)
            echo "export URL=${url}" > workspace/url.sh
      - persist_to_workspace:
          root: workspace
          paths:
            - url.sh

  test web server output:
    docker:
      - image: alpine
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          source /tmp/workspace/url.sh
          server_output=$(curl "$URL")
          echo "${server_output}" | grep "Emmanuel Pius-Ogiji"
          if [[ $? -eq 0 ]]; then
            echo "Server has expected text. Happy days!"
          else
            echo "Server does not have expected text"; exit 1
          fi